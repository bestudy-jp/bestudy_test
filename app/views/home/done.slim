.result-container
  .progress-container
    span.done 診断
    | →
    span.active 教材選び
    | →
    span 学習開始

  .recommend-container
    .serif
      | あなたはズバリ
      span.strong Webエンジニアタイプ

  .serif
    | あなたにオススメの教材は・・・

  - lesson_ids = JSON.parse(session[:recommended_lesson_ids])
  - lessons = Lesson.where(id: lesson_ids).to_a
  - lessons.sort! do |a, b|
    - lesson_ids.index(a.id) <=> lesson_ids.index(b.id)
  ul
    - lessons.each do |lesson|
      - lesson = lesson.decorate
      li.lesson-item
        = link_to lesson_show_path(lesson.id) do
          - if lesson.text_books.first && lesson.text_books.first.pages.count > 0
            = image_tag lesson.text_books.first.pages.first.image.url(:thumb2x), width: 156, height: 117
          - else
            = image_tag 'now_printing.gif', width: 156, height: 117
          .detail-container
            .title
              = lesson.title
            .description
              = lesson.body
            span.author = lesson.author
            span.price = lesson.price

  .serif
    | あなたの能力は・・・

  .radar
    canvas#radar width="360" height="240"

  .serif.bottom-link
    = link_to 'もう一度診断してみたい方はこちら', select_genre_path

- answer_ids = JSON.parse(session[:answer_ids])
- radar_points = Answer.radar_points_from_answer_ids(answer_ids)
- target = nil
- Answer.where(id: answer_ids).each do |ans|
  - target = ans.target if ans.question.selection?
- target_points = target.radar_points
javascript:
  var fields = JSON.parse('#{ raw JSON.generate(radar_points.keys) }');
  var points = ['あなた'].concat(JSON.parse('#{ raw JSON.generate(radar_points.values) }'));
  var target_points = ['目標'].concat(JSON.parse('#{ raw JSON.generate(target_points.values) }'));

coffee:
  rc = new html5jp.graph.radar('radar')
  items = [
    points, target_points
  ]
  params = {
    aCap: fields,
    chartShape: 'circle',
    sLabel: false,
    legend: true,
    aMax: 5,
    aMin: 0
  }
  rc.draw(items, params)
